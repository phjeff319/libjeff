#ifndef HRITHEADER
#define HRITHEADER
#include<stdint.h>

struct hrit_header_common{
  uint8_t header_type;
  uint16_t header_length;
} __attribute__((packed));;

struct hrit_pri_header{
  uint8_t header_type;
  uint16_t header_length;
  uint8_t file_type;
  uint32_t total_header_length;
  uint64_t data_field_length;
} __attribute__((packed));;

struct hrit_image_struct_header{
  uint8_t header_type;
  uint16_t header_length;
  uint8_t num_bits;
  uint16_t num_column;
  uint16_t num_lines;
  uint8_t compression;
} __attribute__((packed));;

struct hrit_image_navigation_header{
  uint8_t header_type;
  uint16_t header_length;
  char projection[32];
  int32_t cfac;
  int32_t lfac;
  int32_t coff;
  int32_t loff;
} __attribute__((packed));;

struct hrit_image_data_function_header{
  uint8_t header_type;
  uint16_t header_length;
  char* definition;
} __attribute__((packed));;

struct hrit_annotation_header{
  uint8_t header_type;
  uint16_t header_length;
  char* text;
} __attribute__((packed));;

struct hrit_time_stamp_header{
  uint8_t header_type;
  uint16_t header_length;
  uint8_t cds_p_field;
  uint16_t cds_t_field_day;
  uint32_t cds_t_field_ms;
} __attribute__((packed));;

struct hrit_ancillary_text_header{
  uint8_t header_type;
  uint16_t header_length;
  char* text;
} __attribute__((packed));;

struct hrit_image_segment_id_header{
  uint8_t header_type;
  uint16_t header_length;
  uint8_t image_seg_no;
  uint8_t total_no_seg;
  uint16_t line_no_seg;
} __attribute__((packed));;

struct hrit_image_compression_header{
  uint8_t header_type;
  uint16_t header_length;
  char* compression_info;
} __attribute__((packed));;

struct hrit_image_observation_time_header{
  uint8_t header_type;
  uint16_t header_length;
  char* observation_time;
} __attribute__((packed));;

struct hrit_image_quality_info_header{
  uint8_t header_type;
  uint16_t header_length;
  char* quality_info;
} __attribute__((packed));;

#endif
