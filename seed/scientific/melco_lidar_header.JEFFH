#ifndef MELCOLIDARHEADER
#define MELCOLIDARHEADER

struct ME_LIDAR_File_Header {
  uint16_t headerLength;
  uint16_t dataID;
  uint16_t dataKind;
  uint16_t dataNum;
  uint8_t obs_st_year;
  uint8_t obs_st_month;
  uint8_t obs_st_day;
  uint8_t obs_st_hour;
  uint8_t obs_st_minute;
  uint8_t obs_st_second;
  uint16_t obs_st_msecond;
  uint8_t obs_end_year;
  uint8_t obs_end_month;
  uint8_t obs_end_day;
  uint8_t obs_end_hour;
  uint8_t obs_end_minute;
  uint8_t obs_end_second;
  uint16_t obs_end_msecond;
  uint8_t ing_st_year;
  uint8_t ing_st_month;
  uint8_t ing_st_day;
  uint8_t ing_st_hour;
  uint8_t ing_st_minute;
  uint8_t ing_st_second;
  uint16_t ing_st_msecond;
  uint8_t ing_end_year;
  uint8_t ing_end_month;
  uint8_t ing_end_day;
  uint8_t ing_end_hour;
  uint8_t ing_end_minute;
  uint8_t ing_end_second;
  uint16_t ing_end_msecond;
  uint8_t lat_deg;
  uint8_t lat_min;
  uint16_t lat_sec;
  uint8_t lon_deg;
  uint8_t lon_min;
  uint16_t lon_sec;
  uint32_t heading;
  uint32_t pitch;
  char empty1[3];
  uint8_t maintenance_flag;
  uint8_t mode;
  uint8_t ucrngnum;
  uint16_t dataSize;
  float start_az;
  float start_el;
  float end_az;
  float end_el;
  float speed;
  float rmin;
  float rngbin;
  uint32_t prf;
  uint32_t plshit;
  uint32_t fileNo;
  uint16_t scanNo;
  uint16_t volNo;
  char comment[52];
} __attribute__((packed));;

struct ME_LIDAR_Data_Header{
  uint32_t data_length;
  char empty[2];
  uint16_t headerNum;
  uint8_t obs_year;
  uint8_t obs_month;
  uint8_t obs_day;
  uint8_t obs_hour;
  uint8_t obs_minute;
  uint8_t obs_second;
  uint16_t obs_msecond;
  uint8_t sim_year;
  uint8_t sim_month;
  uint8_t sim_day;
  uint8_t sim_hour;
  uint8_t sim_minute;
  uint8_t sim_second;
  uint16_t sim_msecond;
  char empty2[2];
  uint8_t scanStart;
  uint8_t scanEnd;
  uint16_t topRngno;
  uint8_t mode;
  char empty3;
  uint16_t rngNum;
  uint16_t azCor;
  uint16_t nfft;
  uint16_t elCor;
  float averageAz;
  float averageEl;
  float rmin;
  float rngbin;
  float plshit;
  float stAz;
  float endAz;
  float stEl;
  float endEl;
} __attribute__((packed));;

#endif
